/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.dtt.ns.thongtinphanhoi.dao.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import vn.dtt.ns.thongtinphanhoi.dao.model.TrangThaiThongKePhanHoi;
import vn.dtt.ns.thongtinphanhoi.dao.model.TrangThaiThongKePhanHoiModel;
import vn.dtt.ns.thongtinphanhoi.dao.model.TrangThaiThongKePhanHoiSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the TrangThaiThongKePhanHoi service. Represents a row in the &quot;ws_trangthai_thongke_phanhoi&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link vn.dtt.ns.thongtinphanhoi.dao.model.TrangThaiThongKePhanHoiModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TrangThaiThongKePhanHoiImpl}.
 * </p>
 *
 * @author tubq
 * @see TrangThaiThongKePhanHoiImpl
 * @see vn.dtt.ns.thongtinphanhoi.dao.model.TrangThaiThongKePhanHoi
 * @see vn.dtt.ns.thongtinphanhoi.dao.model.TrangThaiThongKePhanHoiModel
 * @generated
 */
@JSON(strict = true)
public class TrangThaiThongKePhanHoiModelImpl extends BaseModelImpl<TrangThaiThongKePhanHoi>
	implements TrangThaiThongKePhanHoiModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a trang thai thong ke phan hoi model instance should use the {@link vn.dtt.ns.thongtinphanhoi.dao.model.TrangThaiThongKePhanHoi} interface instead.
	 */
	public static final String TABLE_NAME = "ws_trangthai_thongke_phanhoi";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id", Types.BIGINT },
			{ "matinh", Types.VARCHAR },
			{ "thangnam", Types.VARCHAR },
			{ "ngaytao", Types.TIMESTAMP },
			{ "ngaycapnhat", Types.TIMESTAMP },
			{ "nguoichuyen", Types.VARCHAR },
			{ "nguoicapnhat", Types.VARCHAR },
			{ "da_chuyensang_minhbach", Types.INTEGER },
			{ "articleId", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table ws_trangthai_thongke_phanhoi (id LONG not null primary key,matinh VARCHAR(75) null,thangnam VARCHAR(75) null,ngaytao DATE null,ngaycapnhat DATE null,nguoichuyen VARCHAR(75) null,nguoicapnhat VARCHAR(75) null,da_chuyensang_minhbach INTEGER,articleId INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table ws_trangthai_thongke_phanhoi";
	public static final String ORDER_BY_JPQL = " ORDER BY trangThaiThongKePhanHoi.id DESC";
	public static final String ORDER_BY_SQL = " ORDER BY ws_trangthai_thongke_phanhoi.id DESC";
	public static final String DATA_SOURCE = "thongtinphanhoiDatasource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.dtt.ns.thongtinphanhoi.dao.model.TrangThaiThongKePhanHoi"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.dtt.ns.thongtinphanhoi.dao.model.TrangThaiThongKePhanHoi"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.vn.dtt.ns.thongtinphanhoi.dao.model.TrangThaiThongKePhanHoi"),
			true);
	public static long ARTICLEID_COLUMN_BITMASK = 1L;
	public static long DACHUYENSANGMINHBACH_COLUMN_BITMASK = 2L;
	public static long MATINH_COLUMN_BITMASK = 4L;
	public static long THANGNAM_COLUMN_BITMASK = 8L;
	public static long ID_COLUMN_BITMASK = 16L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static TrangThaiThongKePhanHoi toModel(
		TrangThaiThongKePhanHoiSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		TrangThaiThongKePhanHoi model = new TrangThaiThongKePhanHoiImpl();

		model.setId(soapModel.getId());
		model.setMaTinh(soapModel.getMaTinh());
		model.setThangNam(soapModel.getThangNam());
		model.setNgayTao(soapModel.getNgayTao());
		model.setNgayCapNhat(soapModel.getNgayCapNhat());
		model.setNguoiChuyen(soapModel.getNguoiChuyen());
		model.setNguoiCapNhat(soapModel.getNguoiCapNhat());
		model.setDaChuyenSangMinhBach(soapModel.getDaChuyenSangMinhBach());
		model.setArticleId(soapModel.getArticleId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<TrangThaiThongKePhanHoi> toModels(
		TrangThaiThongKePhanHoiSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<TrangThaiThongKePhanHoi> models = new ArrayList<TrangThaiThongKePhanHoi>(soapModels.length);

		for (TrangThaiThongKePhanHoiSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.vn.dtt.ns.thongtinphanhoi.dao.model.TrangThaiThongKePhanHoi"));

	public TrangThaiThongKePhanHoiModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return TrangThaiThongKePhanHoi.class;
	}

	@Override
	public String getModelClassName() {
		return TrangThaiThongKePhanHoi.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("maTinh", getMaTinh());
		attributes.put("thangNam", getThangNam());
		attributes.put("ngayTao", getNgayTao());
		attributes.put("ngayCapNhat", getNgayCapNhat());
		attributes.put("nguoiChuyen", getNguoiChuyen());
		attributes.put("nguoiCapNhat", getNguoiCapNhat());
		attributes.put("daChuyenSangMinhBach", getDaChuyenSangMinhBach());
		attributes.put("articleId", getArticleId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		String maTinh = (String)attributes.get("maTinh");

		if (maTinh != null) {
			setMaTinh(maTinh);
		}

		String thangNam = (String)attributes.get("thangNam");

		if (thangNam != null) {
			setThangNam(thangNam);
		}

		Date ngayTao = (Date)attributes.get("ngayTao");

		if (ngayTao != null) {
			setNgayTao(ngayTao);
		}

		Date ngayCapNhat = (Date)attributes.get("ngayCapNhat");

		if (ngayCapNhat != null) {
			setNgayCapNhat(ngayCapNhat);
		}

		String nguoiChuyen = (String)attributes.get("nguoiChuyen");

		if (nguoiChuyen != null) {
			setNguoiChuyen(nguoiChuyen);
		}

		String nguoiCapNhat = (String)attributes.get("nguoiCapNhat");

		if (nguoiCapNhat != null) {
			setNguoiCapNhat(nguoiCapNhat);
		}

		Integer daChuyenSangMinhBach = (Integer)attributes.get(
				"daChuyenSangMinhBach");

		if (daChuyenSangMinhBach != null) {
			setDaChuyenSangMinhBach(daChuyenSangMinhBach);
		}

		Integer articleId = (Integer)attributes.get("articleId");

		if (articleId != null) {
			setArticleId(articleId);
		}
	}

	@JSON
	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_columnBitmask = -1L;

		_id = id;
	}

	@JSON
	@Override
	public String getMaTinh() {
		if (_maTinh == null) {
			return StringPool.BLANK;
		}
		else {
			return _maTinh;
		}
	}

	@Override
	public void setMaTinh(String maTinh) {
		_columnBitmask |= MATINH_COLUMN_BITMASK;

		if (_originalMaTinh == null) {
			_originalMaTinh = _maTinh;
		}

		_maTinh = maTinh;
	}

	public String getOriginalMaTinh() {
		return GetterUtil.getString(_originalMaTinh);
	}

	@JSON
	@Override
	public String getThangNam() {
		if (_thangNam == null) {
			return StringPool.BLANK;
		}
		else {
			return _thangNam;
		}
	}

	@Override
	public void setThangNam(String thangNam) {
		_columnBitmask |= THANGNAM_COLUMN_BITMASK;

		if (_originalThangNam == null) {
			_originalThangNam = _thangNam;
		}

		_thangNam = thangNam;
	}

	public String getOriginalThangNam() {
		return GetterUtil.getString(_originalThangNam);
	}

	@JSON
	@Override
	public Date getNgayTao() {
		return _ngayTao;
	}

	@Override
	public void setNgayTao(Date ngayTao) {
		_ngayTao = ngayTao;
	}

	@JSON
	@Override
	public Date getNgayCapNhat() {
		return _ngayCapNhat;
	}

	@Override
	public void setNgayCapNhat(Date ngayCapNhat) {
		_ngayCapNhat = ngayCapNhat;
	}

	@JSON
	@Override
	public String getNguoiChuyen() {
		if (_nguoiChuyen == null) {
			return StringPool.BLANK;
		}
		else {
			return _nguoiChuyen;
		}
	}

	@Override
	public void setNguoiChuyen(String nguoiChuyen) {
		_nguoiChuyen = nguoiChuyen;
	}

	@JSON
	@Override
	public String getNguoiCapNhat() {
		if (_nguoiCapNhat == null) {
			return StringPool.BLANK;
		}
		else {
			return _nguoiCapNhat;
		}
	}

	@Override
	public void setNguoiCapNhat(String nguoiCapNhat) {
		_nguoiCapNhat = nguoiCapNhat;
	}

	@JSON
	@Override
	public int getDaChuyenSangMinhBach() {
		return _daChuyenSangMinhBach;
	}

	@Override
	public void setDaChuyenSangMinhBach(int daChuyenSangMinhBach) {
		_columnBitmask |= DACHUYENSANGMINHBACH_COLUMN_BITMASK;

		if (!_setOriginalDaChuyenSangMinhBach) {
			_setOriginalDaChuyenSangMinhBach = true;

			_originalDaChuyenSangMinhBach = _daChuyenSangMinhBach;
		}

		_daChuyenSangMinhBach = daChuyenSangMinhBach;
	}

	public int getOriginalDaChuyenSangMinhBach() {
		return _originalDaChuyenSangMinhBach;
	}

	@JSON
	@Override
	public int getArticleId() {
		return _articleId;
	}

	@Override
	public void setArticleId(int articleId) {
		_columnBitmask |= ARTICLEID_COLUMN_BITMASK;

		if (!_setOriginalArticleId) {
			_setOriginalArticleId = true;

			_originalArticleId = _articleId;
		}

		_articleId = articleId;
	}

	public int getOriginalArticleId() {
		return _originalArticleId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			TrangThaiThongKePhanHoi.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public TrangThaiThongKePhanHoi toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (TrangThaiThongKePhanHoi)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		TrangThaiThongKePhanHoiImpl trangThaiThongKePhanHoiImpl = new TrangThaiThongKePhanHoiImpl();

		trangThaiThongKePhanHoiImpl.setId(getId());
		trangThaiThongKePhanHoiImpl.setMaTinh(getMaTinh());
		trangThaiThongKePhanHoiImpl.setThangNam(getThangNam());
		trangThaiThongKePhanHoiImpl.setNgayTao(getNgayTao());
		trangThaiThongKePhanHoiImpl.setNgayCapNhat(getNgayCapNhat());
		trangThaiThongKePhanHoiImpl.setNguoiChuyen(getNguoiChuyen());
		trangThaiThongKePhanHoiImpl.setNguoiCapNhat(getNguoiCapNhat());
		trangThaiThongKePhanHoiImpl.setDaChuyenSangMinhBach(getDaChuyenSangMinhBach());
		trangThaiThongKePhanHoiImpl.setArticleId(getArticleId());

		trangThaiThongKePhanHoiImpl.resetOriginalValues();

		return trangThaiThongKePhanHoiImpl;
	}

	@Override
	public int compareTo(TrangThaiThongKePhanHoi trangThaiThongKePhanHoi) {
		int value = 0;

		if (getId() < trangThaiThongKePhanHoi.getId()) {
			value = -1;
		}
		else if (getId() > trangThaiThongKePhanHoi.getId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof TrangThaiThongKePhanHoi)) {
			return false;
		}

		TrangThaiThongKePhanHoi trangThaiThongKePhanHoi = (TrangThaiThongKePhanHoi)obj;

		long primaryKey = trangThaiThongKePhanHoi.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		TrangThaiThongKePhanHoiModelImpl trangThaiThongKePhanHoiModelImpl = this;

		trangThaiThongKePhanHoiModelImpl._originalMaTinh = trangThaiThongKePhanHoiModelImpl._maTinh;

		trangThaiThongKePhanHoiModelImpl._originalThangNam = trangThaiThongKePhanHoiModelImpl._thangNam;

		trangThaiThongKePhanHoiModelImpl._originalDaChuyenSangMinhBach = trangThaiThongKePhanHoiModelImpl._daChuyenSangMinhBach;

		trangThaiThongKePhanHoiModelImpl._setOriginalDaChuyenSangMinhBach = false;

		trangThaiThongKePhanHoiModelImpl._originalArticleId = trangThaiThongKePhanHoiModelImpl._articleId;

		trangThaiThongKePhanHoiModelImpl._setOriginalArticleId = false;

		trangThaiThongKePhanHoiModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<TrangThaiThongKePhanHoi> toCacheModel() {
		TrangThaiThongKePhanHoiCacheModel trangThaiThongKePhanHoiCacheModel = new TrangThaiThongKePhanHoiCacheModel();

		trangThaiThongKePhanHoiCacheModel.id = getId();

		trangThaiThongKePhanHoiCacheModel.maTinh = getMaTinh();

		String maTinh = trangThaiThongKePhanHoiCacheModel.maTinh;

		if ((maTinh != null) && (maTinh.length() == 0)) {
			trangThaiThongKePhanHoiCacheModel.maTinh = null;
		}

		trangThaiThongKePhanHoiCacheModel.thangNam = getThangNam();

		String thangNam = trangThaiThongKePhanHoiCacheModel.thangNam;

		if ((thangNam != null) && (thangNam.length() == 0)) {
			trangThaiThongKePhanHoiCacheModel.thangNam = null;
		}

		Date ngayTao = getNgayTao();

		if (ngayTao != null) {
			trangThaiThongKePhanHoiCacheModel.ngayTao = ngayTao.getTime();
		}
		else {
			trangThaiThongKePhanHoiCacheModel.ngayTao = Long.MIN_VALUE;
		}

		Date ngayCapNhat = getNgayCapNhat();

		if (ngayCapNhat != null) {
			trangThaiThongKePhanHoiCacheModel.ngayCapNhat = ngayCapNhat.getTime();
		}
		else {
			trangThaiThongKePhanHoiCacheModel.ngayCapNhat = Long.MIN_VALUE;
		}

		trangThaiThongKePhanHoiCacheModel.nguoiChuyen = getNguoiChuyen();

		String nguoiChuyen = trangThaiThongKePhanHoiCacheModel.nguoiChuyen;

		if ((nguoiChuyen != null) && (nguoiChuyen.length() == 0)) {
			trangThaiThongKePhanHoiCacheModel.nguoiChuyen = null;
		}

		trangThaiThongKePhanHoiCacheModel.nguoiCapNhat = getNguoiCapNhat();

		String nguoiCapNhat = trangThaiThongKePhanHoiCacheModel.nguoiCapNhat;

		if ((nguoiCapNhat != null) && (nguoiCapNhat.length() == 0)) {
			trangThaiThongKePhanHoiCacheModel.nguoiCapNhat = null;
		}

		trangThaiThongKePhanHoiCacheModel.daChuyenSangMinhBach = getDaChuyenSangMinhBach();

		trangThaiThongKePhanHoiCacheModel.articleId = getArticleId();

		return trangThaiThongKePhanHoiCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(19);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", maTinh=");
		sb.append(getMaTinh());
		sb.append(", thangNam=");
		sb.append(getThangNam());
		sb.append(", ngayTao=");
		sb.append(getNgayTao());
		sb.append(", ngayCapNhat=");
		sb.append(getNgayCapNhat());
		sb.append(", nguoiChuyen=");
		sb.append(getNguoiChuyen());
		sb.append(", nguoiCapNhat=");
		sb.append(getNguoiCapNhat());
		sb.append(", daChuyenSangMinhBach=");
		sb.append(getDaChuyenSangMinhBach());
		sb.append(", articleId=");
		sb.append(getArticleId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(31);

		sb.append("<model><model-name>");
		sb.append("vn.dtt.ns.thongtinphanhoi.dao.model.TrangThaiThongKePhanHoi");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>maTinh</column-name><column-value><![CDATA[");
		sb.append(getMaTinh());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>thangNam</column-name><column-value><![CDATA[");
		sb.append(getThangNam());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ngayTao</column-name><column-value><![CDATA[");
		sb.append(getNgayTao());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ngayCapNhat</column-name><column-value><![CDATA[");
		sb.append(getNgayCapNhat());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nguoiChuyen</column-name><column-value><![CDATA[");
		sb.append(getNguoiChuyen());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nguoiCapNhat</column-name><column-value><![CDATA[");
		sb.append(getNguoiCapNhat());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>daChuyenSangMinhBach</column-name><column-value><![CDATA[");
		sb.append(getDaChuyenSangMinhBach());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>articleId</column-name><column-value><![CDATA[");
		sb.append(getArticleId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = TrangThaiThongKePhanHoi.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			TrangThaiThongKePhanHoi.class
		};
	private long _id;
	private String _maTinh;
	private String _originalMaTinh;
	private String _thangNam;
	private String _originalThangNam;
	private Date _ngayTao;
	private Date _ngayCapNhat;
	private String _nguoiChuyen;
	private String _nguoiCapNhat;
	private int _daChuyenSangMinhBach;
	private int _originalDaChuyenSangMinhBach;
	private boolean _setOriginalDaChuyenSangMinhBach;
	private int _articleId;
	private int _originalArticleId;
	private boolean _setOriginalArticleId;
	private long _columnBitmask;
	private TrangThaiThongKePhanHoi _escapedModel;
}