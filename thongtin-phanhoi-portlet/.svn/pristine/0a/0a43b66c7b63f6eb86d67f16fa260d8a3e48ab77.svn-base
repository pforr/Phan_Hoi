/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.dtt.ns.yeucaugiaitrinh.dao.model;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.util.PortalUtil;

import vn.dtt.ns.yeucaugiaitrinh.dao.service.ClpSerializer;
import vn.dtt.ns.yeucaugiaitrinh.dao.service.YeuCauGiaiTrinhLocalServiceUtil;

import java.io.Serializable;

import java.lang.reflect.Method;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * @author tubq
 */
public class YeuCauGiaiTrinhClp extends BaseModelImpl<YeuCauGiaiTrinh>
	implements YeuCauGiaiTrinh {
	public YeuCauGiaiTrinhClp() {
	}

	@Override
	public Class<?> getModelClass() {
		return YeuCauGiaiTrinh.class;
	}

	@Override
	public String getModelClassName() {
		return YeuCauGiaiTrinh.class.getName();
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("maTinh", getMaTinh());
		attributes.put("maHuyen", getMaHuyen());
		attributes.put("maXa", getMaXa());
		attributes.put("maChuDe", getMaChuDe());
		attributes.put("soLuongTheoChuDe", getSoLuongTheoChuDe());
		attributes.put("userId", getUserId());
		attributes.put("ngayTao", getNgayTao());
		attributes.put("ngayCapNhat", getNgayCapNhat());
		attributes.put("nguoiPheDuyet", getNguoiPheDuyet());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		String maTinh = (String)attributes.get("maTinh");

		if (maTinh != null) {
			setMaTinh(maTinh);
		}

		String maHuyen = (String)attributes.get("maHuyen");

		if (maHuyen != null) {
			setMaHuyen(maHuyen);
		}

		String maXa = (String)attributes.get("maXa");

		if (maXa != null) {
			setMaXa(maXa);
		}

		String maChuDe = (String)attributes.get("maChuDe");

		if (maChuDe != null) {
			setMaChuDe(maChuDe);
		}

		Integer soLuongTheoChuDe = (Integer)attributes.get("soLuongTheoChuDe");

		if (soLuongTheoChuDe != null) {
			setSoLuongTheoChuDe(soLuongTheoChuDe);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Date ngayTao = (Date)attributes.get("ngayTao");

		if (ngayTao != null) {
			setNgayTao(ngayTao);
		}

		Date ngayCapNhat = (Date)attributes.get("ngayCapNhat");

		if (ngayCapNhat != null) {
			setNgayCapNhat(ngayCapNhat);
		}

		Long nguoiPheDuyet = (Long)attributes.get("nguoiPheDuyet");

		if (nguoiPheDuyet != null) {
			setNguoiPheDuyet(nguoiPheDuyet);
		}
	}

	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_id = id;

		if (_yeuCauGiaiTrinhRemoteModel != null) {
			try {
				Class<?> clazz = _yeuCauGiaiTrinhRemoteModel.getClass();

				Method method = clazz.getMethod("setId", long.class);

				method.invoke(_yeuCauGiaiTrinhRemoteModel, id);
			}
			catch (Exception e) {
				throw new UnsupportedOperationException(e);
			}
		}
	}

	@Override
	public String getMaTinh() {
		return _maTinh;
	}

	@Override
	public void setMaTinh(String maTinh) {
		_maTinh = maTinh;

		if (_yeuCauGiaiTrinhRemoteModel != null) {
			try {
				Class<?> clazz = _yeuCauGiaiTrinhRemoteModel.getClass();

				Method method = clazz.getMethod("setMaTinh", String.class);

				method.invoke(_yeuCauGiaiTrinhRemoteModel, maTinh);
			}
			catch (Exception e) {
				throw new UnsupportedOperationException(e);
			}
		}
	}

	@Override
	public String getMaHuyen() {
		return _maHuyen;
	}

	@Override
	public void setMaHuyen(String maHuyen) {
		_maHuyen = maHuyen;

		if (_yeuCauGiaiTrinhRemoteModel != null) {
			try {
				Class<?> clazz = _yeuCauGiaiTrinhRemoteModel.getClass();

				Method method = clazz.getMethod("setMaHuyen", String.class);

				method.invoke(_yeuCauGiaiTrinhRemoteModel, maHuyen);
			}
			catch (Exception e) {
				throw new UnsupportedOperationException(e);
			}
		}
	}

	@Override
	public String getMaXa() {
		return _maXa;
	}

	@Override
	public void setMaXa(String maXa) {
		_maXa = maXa;

		if (_yeuCauGiaiTrinhRemoteModel != null) {
			try {
				Class<?> clazz = _yeuCauGiaiTrinhRemoteModel.getClass();

				Method method = clazz.getMethod("setMaXa", String.class);

				method.invoke(_yeuCauGiaiTrinhRemoteModel, maXa);
			}
			catch (Exception e) {
				throw new UnsupportedOperationException(e);
			}
		}
	}

	@Override
	public String getMaChuDe() {
		return _maChuDe;
	}

	@Override
	public void setMaChuDe(String maChuDe) {
		_maChuDe = maChuDe;

		if (_yeuCauGiaiTrinhRemoteModel != null) {
			try {
				Class<?> clazz = _yeuCauGiaiTrinhRemoteModel.getClass();

				Method method = clazz.getMethod("setMaChuDe", String.class);

				method.invoke(_yeuCauGiaiTrinhRemoteModel, maChuDe);
			}
			catch (Exception e) {
				throw new UnsupportedOperationException(e);
			}
		}
	}

	@Override
	public int getSoLuongTheoChuDe() {
		return _soLuongTheoChuDe;
	}

	@Override
	public void setSoLuongTheoChuDe(int soLuongTheoChuDe) {
		_soLuongTheoChuDe = soLuongTheoChuDe;

		if (_yeuCauGiaiTrinhRemoteModel != null) {
			try {
				Class<?> clazz = _yeuCauGiaiTrinhRemoteModel.getClass();

				Method method = clazz.getMethod("setSoLuongTheoChuDe", int.class);

				method.invoke(_yeuCauGiaiTrinhRemoteModel, soLuongTheoChuDe);
			}
			catch (Exception e) {
				throw new UnsupportedOperationException(e);
			}
		}
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;

		if (_yeuCauGiaiTrinhRemoteModel != null) {
			try {
				Class<?> clazz = _yeuCauGiaiTrinhRemoteModel.getClass();

				Method method = clazz.getMethod("setUserId", long.class);

				method.invoke(_yeuCauGiaiTrinhRemoteModel, userId);
			}
			catch (Exception e) {
				throw new UnsupportedOperationException(e);
			}
		}
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public Date getNgayTao() {
		return _ngayTao;
	}

	@Override
	public void setNgayTao(Date ngayTao) {
		_ngayTao = ngayTao;

		if (_yeuCauGiaiTrinhRemoteModel != null) {
			try {
				Class<?> clazz = _yeuCauGiaiTrinhRemoteModel.getClass();

				Method method = clazz.getMethod("setNgayTao", Date.class);

				method.invoke(_yeuCauGiaiTrinhRemoteModel, ngayTao);
			}
			catch (Exception e) {
				throw new UnsupportedOperationException(e);
			}
		}
	}

	@Override
	public Date getNgayCapNhat() {
		return _ngayCapNhat;
	}

	@Override
	public void setNgayCapNhat(Date ngayCapNhat) {
		_ngayCapNhat = ngayCapNhat;

		if (_yeuCauGiaiTrinhRemoteModel != null) {
			try {
				Class<?> clazz = _yeuCauGiaiTrinhRemoteModel.getClass();

				Method method = clazz.getMethod("setNgayCapNhat", Date.class);

				method.invoke(_yeuCauGiaiTrinhRemoteModel, ngayCapNhat);
			}
			catch (Exception e) {
				throw new UnsupportedOperationException(e);
			}
		}
	}

	@Override
	public long getNguoiPheDuyet() {
		return _nguoiPheDuyet;
	}

	@Override
	public void setNguoiPheDuyet(long nguoiPheDuyet) {
		_nguoiPheDuyet = nguoiPheDuyet;

		if (_yeuCauGiaiTrinhRemoteModel != null) {
			try {
				Class<?> clazz = _yeuCauGiaiTrinhRemoteModel.getClass();

				Method method = clazz.getMethod("setNguoiPheDuyet", long.class);

				method.invoke(_yeuCauGiaiTrinhRemoteModel, nguoiPheDuyet);
			}
			catch (Exception e) {
				throw new UnsupportedOperationException(e);
			}
		}
	}

	public BaseModel<?> getYeuCauGiaiTrinhRemoteModel() {
		return _yeuCauGiaiTrinhRemoteModel;
	}

	public void setYeuCauGiaiTrinhRemoteModel(
		BaseModel<?> yeuCauGiaiTrinhRemoteModel) {
		_yeuCauGiaiTrinhRemoteModel = yeuCauGiaiTrinhRemoteModel;
	}

	public Object invokeOnRemoteModel(String methodName,
		Class<?>[] parameterTypes, Object[] parameterValues)
		throws Exception {
		Object[] remoteParameterValues = new Object[parameterValues.length];

		for (int i = 0; i < parameterValues.length; i++) {
			if (parameterValues[i] != null) {
				remoteParameterValues[i] = ClpSerializer.translateInput(parameterValues[i]);
			}
		}

		Class<?> remoteModelClass = _yeuCauGiaiTrinhRemoteModel.getClass();

		ClassLoader remoteModelClassLoader = remoteModelClass.getClassLoader();

		Class<?>[] remoteParameterTypes = new Class[parameterTypes.length];

		for (int i = 0; i < parameterTypes.length; i++) {
			if (parameterTypes[i].isPrimitive()) {
				remoteParameterTypes[i] = parameterTypes[i];
			}
			else {
				String parameterTypeName = parameterTypes[i].getName();

				remoteParameterTypes[i] = remoteModelClassLoader.loadClass(parameterTypeName);
			}
		}

		Method method = remoteModelClass.getMethod(methodName,
				remoteParameterTypes);

		Object returnValue = method.invoke(_yeuCauGiaiTrinhRemoteModel,
				remoteParameterValues);

		if (returnValue != null) {
			returnValue = ClpSerializer.translateOutput(returnValue);
		}

		return returnValue;
	}

	@Override
	public void persist() throws SystemException {
		if (this.isNew()) {
			YeuCauGiaiTrinhLocalServiceUtil.addYeuCauGiaiTrinh(this);
		}
		else {
			YeuCauGiaiTrinhLocalServiceUtil.updateYeuCauGiaiTrinh(this);
		}
	}

	@Override
	public YeuCauGiaiTrinh toEscapedModel() {
		return (YeuCauGiaiTrinh)ProxyUtil.newProxyInstance(YeuCauGiaiTrinh.class.getClassLoader(),
			new Class[] { YeuCauGiaiTrinh.class },
			new AutoEscapeBeanHandler(this));
	}

	@Override
	public Object clone() {
		YeuCauGiaiTrinhClp clone = new YeuCauGiaiTrinhClp();

		clone.setId(getId());
		clone.setMaTinh(getMaTinh());
		clone.setMaHuyen(getMaHuyen());
		clone.setMaXa(getMaXa());
		clone.setMaChuDe(getMaChuDe());
		clone.setSoLuongTheoChuDe(getSoLuongTheoChuDe());
		clone.setUserId(getUserId());
		clone.setNgayTao(getNgayTao());
		clone.setNgayCapNhat(getNgayCapNhat());
		clone.setNguoiPheDuyet(getNguoiPheDuyet());

		return clone;
	}

	@Override
	public int compareTo(YeuCauGiaiTrinh yeuCauGiaiTrinh) {
		int value = 0;

		if (getId() < yeuCauGiaiTrinh.getId()) {
			value = -1;
		}
		else if (getId() > yeuCauGiaiTrinh.getId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof YeuCauGiaiTrinhClp)) {
			return false;
		}

		YeuCauGiaiTrinhClp yeuCauGiaiTrinh = (YeuCauGiaiTrinhClp)obj;

		long primaryKey = yeuCauGiaiTrinh.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(21);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", maTinh=");
		sb.append(getMaTinh());
		sb.append(", maHuyen=");
		sb.append(getMaHuyen());
		sb.append(", maXa=");
		sb.append(getMaXa());
		sb.append(", maChuDe=");
		sb.append(getMaChuDe());
		sb.append(", soLuongTheoChuDe=");
		sb.append(getSoLuongTheoChuDe());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", ngayTao=");
		sb.append(getNgayTao());
		sb.append(", ngayCapNhat=");
		sb.append(getNgayCapNhat());
		sb.append(", nguoiPheDuyet=");
		sb.append(getNguoiPheDuyet());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(34);

		sb.append("<model><model-name>");
		sb.append("vn.dtt.ns.yeucaugiaitrinh.dao.model.YeuCauGiaiTrinh");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>maTinh</column-name><column-value><![CDATA[");
		sb.append(getMaTinh());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>maHuyen</column-name><column-value><![CDATA[");
		sb.append(getMaHuyen());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>maXa</column-name><column-value><![CDATA[");
		sb.append(getMaXa());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>maChuDe</column-name><column-value><![CDATA[");
		sb.append(getMaChuDe());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>soLuongTheoChuDe</column-name><column-value><![CDATA[");
		sb.append(getSoLuongTheoChuDe());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ngayTao</column-name><column-value><![CDATA[");
		sb.append(getNgayTao());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ngayCapNhat</column-name><column-value><![CDATA[");
		sb.append(getNgayCapNhat());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nguoiPheDuyet</column-name><column-value><![CDATA[");
		sb.append(getNguoiPheDuyet());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private long _id;
	private String _maTinh;
	private String _maHuyen;
	private String _maXa;
	private String _maChuDe;
	private int _soLuongTheoChuDe;
	private long _userId;
	private String _userUuid;
	private Date _ngayTao;
	private Date _ngayCapNhat;
	private long _nguoiPheDuyet;
	private BaseModel<?> _yeuCauGiaiTrinhRemoteModel;
}