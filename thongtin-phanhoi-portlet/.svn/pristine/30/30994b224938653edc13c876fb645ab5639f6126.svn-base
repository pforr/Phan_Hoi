/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.dtt.ns.yeucaugiaitrinh.dao.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import vn.dtt.ns.yeucaugiaitrinh.dao.model.TrangThaiGiaiTrinh;
import vn.dtt.ns.yeucaugiaitrinh.dao.model.TrangThaiGiaiTrinhModel;
import vn.dtt.ns.yeucaugiaitrinh.dao.model.TrangThaiGiaiTrinhSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the TrangThaiGiaiTrinh service. Represents a row in the &quot;ws_trangthai_giaitrinh&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link vn.dtt.ns.yeucaugiaitrinh.dao.model.TrangThaiGiaiTrinhModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TrangThaiGiaiTrinhImpl}.
 * </p>
 *
 * @author tubq
 * @see TrangThaiGiaiTrinhImpl
 * @see vn.dtt.ns.yeucaugiaitrinh.dao.model.TrangThaiGiaiTrinh
 * @see vn.dtt.ns.yeucaugiaitrinh.dao.model.TrangThaiGiaiTrinhModel
 * @generated
 */
@JSON(strict = true)
public class TrangThaiGiaiTrinhModelImpl extends BaseModelImpl<TrangThaiGiaiTrinh>
	implements TrangThaiGiaiTrinhModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a trang thai giai trinh model instance should use the {@link vn.dtt.ns.yeucaugiaitrinh.dao.model.TrangThaiGiaiTrinh} interface instead.
	 */
	public static final String TABLE_NAME = "ws_trangthai_giaitrinh";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id", Types.BIGINT },
			{ "yeucau_giaitrinh_id", Types.BIGINT },
			{ "trangthai", Types.INTEGER },
			{ "ghichu_nguoitao", Types.VARCHAR },
			{ "userId", Types.BIGINT },
			{ "ngaytao", Types.TIMESTAMP },
			{ "ghichu_nguoiduyet", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table ws_trangthai_giaitrinh (id LONG not null primary key,yeucau_giaitrinh_id LONG,trangthai INTEGER,ghichu_nguoitao VARCHAR(75) null,userId LONG,ngaytao DATE null,ghichu_nguoiduyet VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table ws_trangthai_giaitrinh";
	public static final String ORDER_BY_JPQL = " ORDER BY trangThaiGiaiTrinh.id DESC";
	public static final String ORDER_BY_SQL = " ORDER BY ws_trangthai_giaitrinh.id DESC";
	public static final String DATA_SOURCE = "thongtinphanhoiDatasource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.dtt.ns.yeucaugiaitrinh.dao.model.TrangThaiGiaiTrinh"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.dtt.ns.yeucaugiaitrinh.dao.model.TrangThaiGiaiTrinh"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static TrangThaiGiaiTrinh toModel(TrangThaiGiaiTrinhSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		TrangThaiGiaiTrinh model = new TrangThaiGiaiTrinhImpl();

		model.setId(soapModel.getId());
		model.setYeuCauGiaiTrinhId(soapModel.getYeuCauGiaiTrinhId());
		model.setTrangThai(soapModel.getTrangThai());
		model.setGhiChuNguoiLap(soapModel.getGhiChuNguoiLap());
		model.setUserId(soapModel.getUserId());
		model.setNgayTao(soapModel.getNgayTao());
		model.setGhiChuNguoiDuyet(soapModel.getGhiChuNguoiDuyet());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<TrangThaiGiaiTrinh> toModels(
		TrangThaiGiaiTrinhSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<TrangThaiGiaiTrinh> models = new ArrayList<TrangThaiGiaiTrinh>(soapModels.length);

		for (TrangThaiGiaiTrinhSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.vn.dtt.ns.yeucaugiaitrinh.dao.model.TrangThaiGiaiTrinh"));

	public TrangThaiGiaiTrinhModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return TrangThaiGiaiTrinh.class;
	}

	@Override
	public String getModelClassName() {
		return TrangThaiGiaiTrinh.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("yeuCauGiaiTrinhId", getYeuCauGiaiTrinhId());
		attributes.put("trangThai", getTrangThai());
		attributes.put("ghiChuNguoiLap", getGhiChuNguoiLap());
		attributes.put("userId", getUserId());
		attributes.put("ngayTao", getNgayTao());
		attributes.put("ghiChuNguoiDuyet", getGhiChuNguoiDuyet());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		Long yeuCauGiaiTrinhId = (Long)attributes.get("yeuCauGiaiTrinhId");

		if (yeuCauGiaiTrinhId != null) {
			setYeuCauGiaiTrinhId(yeuCauGiaiTrinhId);
		}

		Integer trangThai = (Integer)attributes.get("trangThai");

		if (trangThai != null) {
			setTrangThai(trangThai);
		}

		String ghiChuNguoiLap = (String)attributes.get("ghiChuNguoiLap");

		if (ghiChuNguoiLap != null) {
			setGhiChuNguoiLap(ghiChuNguoiLap);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Date ngayTao = (Date)attributes.get("ngayTao");

		if (ngayTao != null) {
			setNgayTao(ngayTao);
		}

		String ghiChuNguoiDuyet = (String)attributes.get("ghiChuNguoiDuyet");

		if (ghiChuNguoiDuyet != null) {
			setGhiChuNguoiDuyet(ghiChuNguoiDuyet);
		}
	}

	@JSON
	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_id = id;
	}

	@JSON
	@Override
	public long getYeuCauGiaiTrinhId() {
		return _yeuCauGiaiTrinhId;
	}

	@Override
	public void setYeuCauGiaiTrinhId(long yeuCauGiaiTrinhId) {
		_yeuCauGiaiTrinhId = yeuCauGiaiTrinhId;
	}

	@JSON
	@Override
	public int getTrangThai() {
		return _trangThai;
	}

	@Override
	public void setTrangThai(int trangThai) {
		_trangThai = trangThai;
	}

	@JSON
	@Override
	public String getGhiChuNguoiLap() {
		if (_ghiChuNguoiLap == null) {
			return StringPool.BLANK;
		}
		else {
			return _ghiChuNguoiLap;
		}
	}

	@Override
	public void setGhiChuNguoiLap(String ghiChuNguoiLap) {
		_ghiChuNguoiLap = ghiChuNguoiLap;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public Date getNgayTao() {
		return _ngayTao;
	}

	@Override
	public void setNgayTao(Date ngayTao) {
		_ngayTao = ngayTao;
	}

	@JSON
	@Override
	public String getGhiChuNguoiDuyet() {
		if (_ghiChuNguoiDuyet == null) {
			return StringPool.BLANK;
		}
		else {
			return _ghiChuNguoiDuyet;
		}
	}

	@Override
	public void setGhiChuNguoiDuyet(String ghiChuNguoiDuyet) {
		_ghiChuNguoiDuyet = ghiChuNguoiDuyet;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			TrangThaiGiaiTrinh.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public TrangThaiGiaiTrinh toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (TrangThaiGiaiTrinh)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		TrangThaiGiaiTrinhImpl trangThaiGiaiTrinhImpl = new TrangThaiGiaiTrinhImpl();

		trangThaiGiaiTrinhImpl.setId(getId());
		trangThaiGiaiTrinhImpl.setYeuCauGiaiTrinhId(getYeuCauGiaiTrinhId());
		trangThaiGiaiTrinhImpl.setTrangThai(getTrangThai());
		trangThaiGiaiTrinhImpl.setGhiChuNguoiLap(getGhiChuNguoiLap());
		trangThaiGiaiTrinhImpl.setUserId(getUserId());
		trangThaiGiaiTrinhImpl.setNgayTao(getNgayTao());
		trangThaiGiaiTrinhImpl.setGhiChuNguoiDuyet(getGhiChuNguoiDuyet());

		trangThaiGiaiTrinhImpl.resetOriginalValues();

		return trangThaiGiaiTrinhImpl;
	}

	@Override
	public int compareTo(TrangThaiGiaiTrinh trangThaiGiaiTrinh) {
		int value = 0;

		if (getId() < trangThaiGiaiTrinh.getId()) {
			value = -1;
		}
		else if (getId() > trangThaiGiaiTrinh.getId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof TrangThaiGiaiTrinh)) {
			return false;
		}

		TrangThaiGiaiTrinh trangThaiGiaiTrinh = (TrangThaiGiaiTrinh)obj;

		long primaryKey = trangThaiGiaiTrinh.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<TrangThaiGiaiTrinh> toCacheModel() {
		TrangThaiGiaiTrinhCacheModel trangThaiGiaiTrinhCacheModel = new TrangThaiGiaiTrinhCacheModel();

		trangThaiGiaiTrinhCacheModel.id = getId();

		trangThaiGiaiTrinhCacheModel.yeuCauGiaiTrinhId = getYeuCauGiaiTrinhId();

		trangThaiGiaiTrinhCacheModel.trangThai = getTrangThai();

		trangThaiGiaiTrinhCacheModel.ghiChuNguoiLap = getGhiChuNguoiLap();

		String ghiChuNguoiLap = trangThaiGiaiTrinhCacheModel.ghiChuNguoiLap;

		if ((ghiChuNguoiLap != null) && (ghiChuNguoiLap.length() == 0)) {
			trangThaiGiaiTrinhCacheModel.ghiChuNguoiLap = null;
		}

		trangThaiGiaiTrinhCacheModel.userId = getUserId();

		Date ngayTao = getNgayTao();

		if (ngayTao != null) {
			trangThaiGiaiTrinhCacheModel.ngayTao = ngayTao.getTime();
		}
		else {
			trangThaiGiaiTrinhCacheModel.ngayTao = Long.MIN_VALUE;
		}

		trangThaiGiaiTrinhCacheModel.ghiChuNguoiDuyet = getGhiChuNguoiDuyet();

		String ghiChuNguoiDuyet = trangThaiGiaiTrinhCacheModel.ghiChuNguoiDuyet;

		if ((ghiChuNguoiDuyet != null) && (ghiChuNguoiDuyet.length() == 0)) {
			trangThaiGiaiTrinhCacheModel.ghiChuNguoiDuyet = null;
		}

		return trangThaiGiaiTrinhCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(15);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", yeuCauGiaiTrinhId=");
		sb.append(getYeuCauGiaiTrinhId());
		sb.append(", trangThai=");
		sb.append(getTrangThai());
		sb.append(", ghiChuNguoiLap=");
		sb.append(getGhiChuNguoiLap());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", ngayTao=");
		sb.append(getNgayTao());
		sb.append(", ghiChuNguoiDuyet=");
		sb.append(getGhiChuNguoiDuyet());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(25);

		sb.append("<model><model-name>");
		sb.append("vn.dtt.ns.yeucaugiaitrinh.dao.model.TrangThaiGiaiTrinh");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>yeuCauGiaiTrinhId</column-name><column-value><![CDATA[");
		sb.append(getYeuCauGiaiTrinhId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>trangThai</column-name><column-value><![CDATA[");
		sb.append(getTrangThai());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ghiChuNguoiLap</column-name><column-value><![CDATA[");
		sb.append(getGhiChuNguoiLap());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ngayTao</column-name><column-value><![CDATA[");
		sb.append(getNgayTao());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ghiChuNguoiDuyet</column-name><column-value><![CDATA[");
		sb.append(getGhiChuNguoiDuyet());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = TrangThaiGiaiTrinh.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			TrangThaiGiaiTrinh.class
		};
	private long _id;
	private long _yeuCauGiaiTrinhId;
	private int _trangThai;
	private String _ghiChuNguoiLap;
	private long _userId;
	private String _userUuid;
	private Date _ngayTao;
	private String _ghiChuNguoiDuyet;
	private TrangThaiGiaiTrinh _escapedModel;
}