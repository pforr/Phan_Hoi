/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.dtt.ns.yeucaugiaitrinh.dao.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import vn.dtt.ns.yeucaugiaitrinh.dao.model.ChiTietYeuCauGiaiTrinh;
import vn.dtt.ns.yeucaugiaitrinh.dao.model.ChiTietYeuCauGiaiTrinhModel;
import vn.dtt.ns.yeucaugiaitrinh.dao.model.ChiTietYeuCauGiaiTrinhSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the ChiTietYeuCauGiaiTrinh service. Represents a row in the &quot;ws_chitiet_yeucau_giaitrinh&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link vn.dtt.ns.yeucaugiaitrinh.dao.model.ChiTietYeuCauGiaiTrinhModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ChiTietYeuCauGiaiTrinhImpl}.
 * </p>
 *
 * @author tubq
 * @see ChiTietYeuCauGiaiTrinhImpl
 * @see vn.dtt.ns.yeucaugiaitrinh.dao.model.ChiTietYeuCauGiaiTrinh
 * @see vn.dtt.ns.yeucaugiaitrinh.dao.model.ChiTietYeuCauGiaiTrinhModel
 * @generated
 */
@JSON(strict = true)
public class ChiTietYeuCauGiaiTrinhModelImpl extends BaseModelImpl<ChiTietYeuCauGiaiTrinh>
	implements ChiTietYeuCauGiaiTrinhModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a chi tiet yeu cau giai trinh model instance should use the {@link vn.dtt.ns.yeucaugiaitrinh.dao.model.ChiTietYeuCauGiaiTrinh} interface instead.
	 */
	public static final String TABLE_NAME = "ws_chitiet_yeucau_giaitrinh";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id", Types.BIGINT },
			{ "yeucau_giaitrinh_id", Types.BIGINT },
			{ "mathongtinphananh", Types.VARCHAR },
			{ "soluong", Types.INTEGER },
			{ "giaitrinh", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table ws_chitiet_yeucau_giaitrinh (id LONG not null primary key,yeucau_giaitrinh_id LONG,mathongtinphananh VARCHAR(75) null,soluong INTEGER,giaitrinh VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table ws_chitiet_yeucau_giaitrinh";
	public static final String ORDER_BY_JPQL = " ORDER BY chiTietYeuCauGiaiTrinh.id DESC";
	public static final String ORDER_BY_SQL = " ORDER BY ws_chitiet_yeucau_giaitrinh.id DESC";
	public static final String DATA_SOURCE = "thongtinphanhoiDatasource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.dtt.ns.yeucaugiaitrinh.dao.model.ChiTietYeuCauGiaiTrinh"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.dtt.ns.yeucaugiaitrinh.dao.model.ChiTietYeuCauGiaiTrinh"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.vn.dtt.ns.yeucaugiaitrinh.dao.model.ChiTietYeuCauGiaiTrinh"),
			true);
	public static long MATHONGTINPHANANH_COLUMN_BITMASK = 1L;
	public static long YEUCAUGIAITRINHID_COLUMN_BITMASK = 2L;
	public static long ID_COLUMN_BITMASK = 4L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static ChiTietYeuCauGiaiTrinh toModel(
		ChiTietYeuCauGiaiTrinhSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		ChiTietYeuCauGiaiTrinh model = new ChiTietYeuCauGiaiTrinhImpl();

		model.setId(soapModel.getId());
		model.setYeuCauGiaiTrinhId(soapModel.getYeuCauGiaiTrinhId());
		model.setMaThongTinPhanAnh(soapModel.getMaThongTinPhanAnh());
		model.setSoLuong(soapModel.getSoLuong());
		model.setGiaiTrinh(soapModel.getGiaiTrinh());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<ChiTietYeuCauGiaiTrinh> toModels(
		ChiTietYeuCauGiaiTrinhSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<ChiTietYeuCauGiaiTrinh> models = new ArrayList<ChiTietYeuCauGiaiTrinh>(soapModels.length);

		for (ChiTietYeuCauGiaiTrinhSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.vn.dtt.ns.yeucaugiaitrinh.dao.model.ChiTietYeuCauGiaiTrinh"));

	public ChiTietYeuCauGiaiTrinhModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ChiTietYeuCauGiaiTrinh.class;
	}

	@Override
	public String getModelClassName() {
		return ChiTietYeuCauGiaiTrinh.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("yeuCauGiaiTrinhId", getYeuCauGiaiTrinhId());
		attributes.put("maThongTinPhanAnh", getMaThongTinPhanAnh());
		attributes.put("soLuong", getSoLuong());
		attributes.put("giaiTrinh", getGiaiTrinh());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		Long yeuCauGiaiTrinhId = (Long)attributes.get("yeuCauGiaiTrinhId");

		if (yeuCauGiaiTrinhId != null) {
			setYeuCauGiaiTrinhId(yeuCauGiaiTrinhId);
		}

		String maThongTinPhanAnh = (String)attributes.get("maThongTinPhanAnh");

		if (maThongTinPhanAnh != null) {
			setMaThongTinPhanAnh(maThongTinPhanAnh);
		}

		Integer soLuong = (Integer)attributes.get("soLuong");

		if (soLuong != null) {
			setSoLuong(soLuong);
		}

		String giaiTrinh = (String)attributes.get("giaiTrinh");

		if (giaiTrinh != null) {
			setGiaiTrinh(giaiTrinh);
		}
	}

	@JSON
	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_columnBitmask = -1L;

		_id = id;
	}

	@JSON
	@Override
	public long getYeuCauGiaiTrinhId() {
		return _yeuCauGiaiTrinhId;
	}

	@Override
	public void setYeuCauGiaiTrinhId(long yeuCauGiaiTrinhId) {
		_columnBitmask |= YEUCAUGIAITRINHID_COLUMN_BITMASK;

		if (!_setOriginalYeuCauGiaiTrinhId) {
			_setOriginalYeuCauGiaiTrinhId = true;

			_originalYeuCauGiaiTrinhId = _yeuCauGiaiTrinhId;
		}

		_yeuCauGiaiTrinhId = yeuCauGiaiTrinhId;
	}

	public long getOriginalYeuCauGiaiTrinhId() {
		return _originalYeuCauGiaiTrinhId;
	}

	@JSON
	@Override
	public String getMaThongTinPhanAnh() {
		if (_maThongTinPhanAnh == null) {
			return StringPool.BLANK;
		}
		else {
			return _maThongTinPhanAnh;
		}
	}

	@Override
	public void setMaThongTinPhanAnh(String maThongTinPhanAnh) {
		_columnBitmask |= MATHONGTINPHANANH_COLUMN_BITMASK;

		if (_originalMaThongTinPhanAnh == null) {
			_originalMaThongTinPhanAnh = _maThongTinPhanAnh;
		}

		_maThongTinPhanAnh = maThongTinPhanAnh;
	}

	public String getOriginalMaThongTinPhanAnh() {
		return GetterUtil.getString(_originalMaThongTinPhanAnh);
	}

	@JSON
	@Override
	public int getSoLuong() {
		return _soLuong;
	}

	@Override
	public void setSoLuong(int soLuong) {
		_soLuong = soLuong;
	}

	@JSON
	@Override
	public String getGiaiTrinh() {
		if (_giaiTrinh == null) {
			return StringPool.BLANK;
		}
		else {
			return _giaiTrinh;
		}
	}

	@Override
	public void setGiaiTrinh(String giaiTrinh) {
		_giaiTrinh = giaiTrinh;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			ChiTietYeuCauGiaiTrinh.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ChiTietYeuCauGiaiTrinh toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ChiTietYeuCauGiaiTrinh)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ChiTietYeuCauGiaiTrinhImpl chiTietYeuCauGiaiTrinhImpl = new ChiTietYeuCauGiaiTrinhImpl();

		chiTietYeuCauGiaiTrinhImpl.setId(getId());
		chiTietYeuCauGiaiTrinhImpl.setYeuCauGiaiTrinhId(getYeuCauGiaiTrinhId());
		chiTietYeuCauGiaiTrinhImpl.setMaThongTinPhanAnh(getMaThongTinPhanAnh());
		chiTietYeuCauGiaiTrinhImpl.setSoLuong(getSoLuong());
		chiTietYeuCauGiaiTrinhImpl.setGiaiTrinh(getGiaiTrinh());

		chiTietYeuCauGiaiTrinhImpl.resetOriginalValues();

		return chiTietYeuCauGiaiTrinhImpl;
	}

	@Override
	public int compareTo(ChiTietYeuCauGiaiTrinh chiTietYeuCauGiaiTrinh) {
		int value = 0;

		if (getId() < chiTietYeuCauGiaiTrinh.getId()) {
			value = -1;
		}
		else if (getId() > chiTietYeuCauGiaiTrinh.getId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ChiTietYeuCauGiaiTrinh)) {
			return false;
		}

		ChiTietYeuCauGiaiTrinh chiTietYeuCauGiaiTrinh = (ChiTietYeuCauGiaiTrinh)obj;

		long primaryKey = chiTietYeuCauGiaiTrinh.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		ChiTietYeuCauGiaiTrinhModelImpl chiTietYeuCauGiaiTrinhModelImpl = this;

		chiTietYeuCauGiaiTrinhModelImpl._originalYeuCauGiaiTrinhId = chiTietYeuCauGiaiTrinhModelImpl._yeuCauGiaiTrinhId;

		chiTietYeuCauGiaiTrinhModelImpl._setOriginalYeuCauGiaiTrinhId = false;

		chiTietYeuCauGiaiTrinhModelImpl._originalMaThongTinPhanAnh = chiTietYeuCauGiaiTrinhModelImpl._maThongTinPhanAnh;

		chiTietYeuCauGiaiTrinhModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ChiTietYeuCauGiaiTrinh> toCacheModel() {
		ChiTietYeuCauGiaiTrinhCacheModel chiTietYeuCauGiaiTrinhCacheModel = new ChiTietYeuCauGiaiTrinhCacheModel();

		chiTietYeuCauGiaiTrinhCacheModel.id = getId();

		chiTietYeuCauGiaiTrinhCacheModel.yeuCauGiaiTrinhId = getYeuCauGiaiTrinhId();

		chiTietYeuCauGiaiTrinhCacheModel.maThongTinPhanAnh = getMaThongTinPhanAnh();

		String maThongTinPhanAnh = chiTietYeuCauGiaiTrinhCacheModel.maThongTinPhanAnh;

		if ((maThongTinPhanAnh != null) && (maThongTinPhanAnh.length() == 0)) {
			chiTietYeuCauGiaiTrinhCacheModel.maThongTinPhanAnh = null;
		}

		chiTietYeuCauGiaiTrinhCacheModel.soLuong = getSoLuong();

		chiTietYeuCauGiaiTrinhCacheModel.giaiTrinh = getGiaiTrinh();

		String giaiTrinh = chiTietYeuCauGiaiTrinhCacheModel.giaiTrinh;

		if ((giaiTrinh != null) && (giaiTrinh.length() == 0)) {
			chiTietYeuCauGiaiTrinhCacheModel.giaiTrinh = null;
		}

		return chiTietYeuCauGiaiTrinhCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(11);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", yeuCauGiaiTrinhId=");
		sb.append(getYeuCauGiaiTrinhId());
		sb.append(", maThongTinPhanAnh=");
		sb.append(getMaThongTinPhanAnh());
		sb.append(", soLuong=");
		sb.append(getSoLuong());
		sb.append(", giaiTrinh=");
		sb.append(getGiaiTrinh());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(19);

		sb.append("<model><model-name>");
		sb.append("vn.dtt.ns.yeucaugiaitrinh.dao.model.ChiTietYeuCauGiaiTrinh");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>yeuCauGiaiTrinhId</column-name><column-value><![CDATA[");
		sb.append(getYeuCauGiaiTrinhId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>maThongTinPhanAnh</column-name><column-value><![CDATA[");
		sb.append(getMaThongTinPhanAnh());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>soLuong</column-name><column-value><![CDATA[");
		sb.append(getSoLuong());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>giaiTrinh</column-name><column-value><![CDATA[");
		sb.append(getGiaiTrinh());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ChiTietYeuCauGiaiTrinh.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			ChiTietYeuCauGiaiTrinh.class
		};
	private long _id;
	private long _yeuCauGiaiTrinhId;
	private long _originalYeuCauGiaiTrinhId;
	private boolean _setOriginalYeuCauGiaiTrinhId;
	private String _maThongTinPhanAnh;
	private String _originalMaThongTinPhanAnh;
	private int _soLuong;
	private String _giaiTrinh;
	private long _columnBitmask;
	private ChiTietYeuCauGiaiTrinh _escapedModel;
}